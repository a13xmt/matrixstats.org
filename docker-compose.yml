version: '3'

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=matrixstats
      - POSTGRES_USER=matrixstats
      - POSTGRES_PASSWORD=matrixstats
    volumes:
      - 'pgdata:/var/lib/postgresql/data/'
      - 'sockets:/var/run/sockets'

  redis:
    build: './docks/redis/.'
    volumes:
      - 'sockets:/var/run/sockets'
      - 'redisdata:/data'
      - 'logsdata:/logs'

  nginx:
    build: './docks/nginx/.'
    volumes:
      - 'mediadata:/media'
      - 'staticdata:/static'
      - 'letsencryptdata:/etc/letsencrypt'
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  web:
    build: './source/.' 
    image: 'websource'
    env_file:
      - ./source/matrix_stats/env/prod
    command: 'gunicorn matrix_stats.wsgi:application -w 2 -b :8000'
    volumes:
      - 'mediadata:/media'
      - 'staticdata:/static'
      - 'logsdata:/logs'
      - 'storagedata:/storage'
      - 'sockets:/var/run/sockets'
    depends_on:
      - postgres 
      - redis

  celery_worker_control:
    image: 'websource'
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - ./source/matrix_stats/env/prod
    volumes:
      - 'mediadata:/media'
      - 'staticdata:/static'
      - 'logsdata:/logs'
      - 'storagedata:/storage'
      - 'sockets:/var/run/sockets'
    command: 'celery -A matrix_stats worker -l info -E -Q control --concurrency 1 -Ofair --logfile=/logs/worker-default.log'
    depends_on:
      - redis

  celery_worker_service:
    image: 'websource'
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - ./source/matrix_stats/env/prod
    volumes:
      - 'mediadata:/media'
      - 'staticdata:/static'
      - 'logsdata:/logs'
      - 'storagedata:/storage'
      - 'sockets:/var/run/sockets'
    command: 'celery -A matrix_stats worker -l info -E -Q service --concurrency 5 -Ofair --logfile=/logs/worker-service.log'
    depends_on:
      - redis

  celery_worker_processing:
    image: 'websource'
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - ./source/matrix_stats/env/prod
    volumes:
      - 'mediadata:/media'
      - 'staticdata:/static'
      - 'logsdata:/logs'
      - 'storagedata:/storage'
      - 'sockets:/var/run/sockets'
    command: 'celery -A matrix_stats worker -l info -E -Q processing --concurrency 1 -Ofair --logfile=/logs/worker-processing.log'
    depends_on:
      - redis

  celery_worker_sync:
    image: 'websource'
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - ./source/matrix_stats/env/prod
    volumes:
      - 'mediadata:/media'
      - 'staticdata:/static'
      - 'logsdata:/logs'
      - 'storagedata:/storage'
      - 'sockets:/var/run/sockets'
    command: 'celery -A matrix_stats worker -P eventlet -c 500 -l info -E -Q sync -Ofair --logfile=/logs/worker-sync.log'
    depends_on:
      - redis

  celery_beat:
    image: 'websource'
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - ./source/matrix_stats/env/prod
    volumes:
      - 'sockets:/var/run/sockets'
    command: 'celery -A matrix_stats beat -l debug'
    depends_on:
      - redis

  flower:
    image: 'websource'
    environment:
      - C_FORCE_ROOT=true
    env_file:
      - ./source/matrix_stats/env/prod
    ports:
      - "127.0.0.1:5555:5555"
    volumes:
      - 'logsdata:/logs'
      - 'sockets:/var/run/sockets'
    command: 'celery flower -A matrix_stats --address=0.0.0.0 --port=5555'
    depends_on:
      - redis



volumes:
  pgdata:
  storagedata:
  mediadata:
  staticdata:
  logsdata:
  letsencryptdata:
  redisdata:
  sockets:
